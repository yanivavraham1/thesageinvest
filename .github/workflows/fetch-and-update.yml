name: Fetch Fund Data and Update Website

on:
  schedule:
    - cron: "0 2 * * *" # Runs daily at 2 AM UTC
  workflow_dispatch: # Allows manual trigger from GitHub UI

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4 # Updated to v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Updated to v4
        with:
          node-version: "18"
          cache: "npm" # Cache npm dependencies

      - name: Install dependencies
        run: npm ci # Use npm ci for faster, reliable installs

      - name: Install Puppeteer with dependencies
        run: |
          # Install Puppeteer dependencies using the built-in script
          npx puppeteer browsers install chrome
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Debug environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Public directory:"
          ls -la public/ || echo "Public directory doesn't exist"

      - name: Run data fetch script
        run: node kaspitDataRetrieve.js
        env:
          # Add any environment variables if needed
          NODE_ENV: production

      - name: Check if file was updated
        id: check_changes
        run: |
          if git diff --quiet public/fundsData.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push updated data
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add public/fundsData.json
          git commit -m "Update fundsData.json - $(date '+%Y-%m-%d %H:%M:%S UTC')"
          git push
